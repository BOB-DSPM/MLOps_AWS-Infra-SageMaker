{
 "Resources": {
  "NetVpc9C8E08CA": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.20.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Name",
      "Value": "My-mlops-BaseStack/Net/Vpc"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/Resource"
   }
  },
  "NetVpcpoublicSubnet1Subnet2663FDF8": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "ap-northeast-2a",
    "CidrBlock": "10.20.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "poublic"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Name",
      "Value": "My-mlops-BaseStack/Net/Vpc/poublicSubnet1"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ],
    "VpcId": {
     "Ref": "NetVpc9C8E08CA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/poublicSubnet1/Subnet"
   }
  },
  "NetVpcpoublicSubnet1RouteTableC7B97EBC": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Name",
      "Value": "My-mlops-BaseStack/Net/Vpc/poublicSubnet1"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ],
    "VpcId": {
     "Ref": "NetVpc9C8E08CA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/poublicSubnet1/RouteTable"
   }
  },
  "NetVpcpoublicSubnet1RouteTableAssociationD187BBEF": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "NetVpcpoublicSubnet1RouteTableC7B97EBC"
    },
    "SubnetId": {
     "Ref": "NetVpcpoublicSubnet1Subnet2663FDF8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/poublicSubnet1/RouteTableAssociation"
   }
  },
  "NetVpcpoublicSubnet1DefaultRoute7B3A0BBF": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "NetVpcIGW8C3B516F"
    },
    "RouteTableId": {
     "Ref": "NetVpcpoublicSubnet1RouteTableC7B97EBC"
    }
   },
   "DependsOn": [
    "NetVpcVPCGW7DE1748F"
   ],
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/poublicSubnet1/DefaultRoute"
   }
  },
  "NetVpcpoublicSubnet1EIP3A257FAD": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Name",
      "Value": "My-mlops-BaseStack/Net/Vpc/poublicSubnet1"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/poublicSubnet1/EIP"
   }
  },
  "NetVpcpoublicSubnet1NATGateway9FFD2AE7": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "NetVpcpoublicSubnet1EIP3A257FAD",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "NetVpcpoublicSubnet1Subnet2663FDF8"
    },
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Name",
      "Value": "My-mlops-BaseStack/Net/Vpc/poublicSubnet1"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ]
   },
   "DependsOn": [
    "NetVpcpoublicSubnet1DefaultRoute7B3A0BBF",
    "NetVpcpoublicSubnet1RouteTableAssociationD187BBEF"
   ],
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/poublicSubnet1/NATGateway"
   }
  },
  "NetVpcpoublicSubnet2Subnet5663DA54": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "ap-northeast-2b",
    "CidrBlock": "10.20.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "poublic"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Name",
      "Value": "My-mlops-BaseStack/Net/Vpc/poublicSubnet2"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ],
    "VpcId": {
     "Ref": "NetVpc9C8E08CA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/poublicSubnet2/Subnet"
   }
  },
  "NetVpcpoublicSubnet2RouteTableD2863FD6": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Name",
      "Value": "My-mlops-BaseStack/Net/Vpc/poublicSubnet2"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ],
    "VpcId": {
     "Ref": "NetVpc9C8E08CA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/poublicSubnet2/RouteTable"
   }
  },
  "NetVpcpoublicSubnet2RouteTableAssociation2584ED31": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "NetVpcpoublicSubnet2RouteTableD2863FD6"
    },
    "SubnetId": {
     "Ref": "NetVpcpoublicSubnet2Subnet5663DA54"
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/poublicSubnet2/RouteTableAssociation"
   }
  },
  "NetVpcpoublicSubnet2DefaultRoute04C230F1": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "NetVpcIGW8C3B516F"
    },
    "RouteTableId": {
     "Ref": "NetVpcpoublicSubnet2RouteTableD2863FD6"
    }
   },
   "DependsOn": [
    "NetVpcVPCGW7DE1748F"
   ],
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/poublicSubnet2/DefaultRoute"
   }
  },
  "NetVpcprivateSubnet1Subnet5462C604": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "ap-northeast-2a",
    "CidrBlock": "10.20.16.0/20",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Name",
      "Value": "My-mlops-BaseStack/Net/Vpc/privateSubnet1"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ],
    "VpcId": {
     "Ref": "NetVpc9C8E08CA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/privateSubnet1/Subnet"
   }
  },
  "NetVpcprivateSubnet1RouteTable7FE5625A": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Name",
      "Value": "My-mlops-BaseStack/Net/Vpc/privateSubnet1"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ],
    "VpcId": {
     "Ref": "NetVpc9C8E08CA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/privateSubnet1/RouteTable"
   }
  },
  "NetVpcprivateSubnet1RouteTableAssociation262F91CA": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "NetVpcprivateSubnet1RouteTable7FE5625A"
    },
    "SubnetId": {
     "Ref": "NetVpcprivateSubnet1Subnet5462C604"
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/privateSubnet1/RouteTableAssociation"
   }
  },
  "NetVpcprivateSubnet1DefaultRouteB24C5742": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "NetVpcpoublicSubnet1NATGateway9FFD2AE7"
    },
    "RouteTableId": {
     "Ref": "NetVpcprivateSubnet1RouteTable7FE5625A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/privateSubnet1/DefaultRoute"
   }
  },
  "NetVpcprivateSubnet2SubnetD63D8069": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "ap-northeast-2b",
    "CidrBlock": "10.20.32.0/20",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Name",
      "Value": "My-mlops-BaseStack/Net/Vpc/privateSubnet2"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ],
    "VpcId": {
     "Ref": "NetVpc9C8E08CA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/privateSubnet2/Subnet"
   }
  },
  "NetVpcprivateSubnet2RouteTable3F816AD9": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Name",
      "Value": "My-mlops-BaseStack/Net/Vpc/privateSubnet2"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ],
    "VpcId": {
     "Ref": "NetVpc9C8E08CA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/privateSubnet2/RouteTable"
   }
  },
  "NetVpcprivateSubnet2RouteTableAssociation0F6A5ED7": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "NetVpcprivateSubnet2RouteTable3F816AD9"
    },
    "SubnetId": {
     "Ref": "NetVpcprivateSubnet2SubnetD63D8069"
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/privateSubnet2/RouteTableAssociation"
   }
  },
  "NetVpcprivateSubnet2DefaultRouteB7FAA534": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "NetVpcpoublicSubnet1NATGateway9FFD2AE7"
    },
    "RouteTableId": {
     "Ref": "NetVpcprivateSubnet2RouteTable3F816AD9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/privateSubnet2/DefaultRoute"
   }
  },
  "NetVpcIGW8C3B516F": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Name",
      "Value": "My-mlops-BaseStack/Net/Vpc"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/IGW"
   }
  },
  "NetVpcVPCGW7DE1748F": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "NetVpcIGW8C3B516F"
    },
    "VpcId": {
     "Ref": "NetVpc9C8E08CA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Net/Vpc/VPCGW"
   }
  },
  "KmsKeyF138A6A4": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "Description": "S3/KMS general-purpose key",
    "EnableKeyRotation": true,
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::651706765732:root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PendingWindowInDays": 7,
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Kms/Key/Resource"
   }
  },
  "KmsKeyAliasA98867C7": {
   "Type": "AWS::KMS::Alias",
   "Properties": {
    "AliasName": "alias/my-mlops-dev-s3",
    "TargetKeyId": {
     "Fn::GetAtt": [
      "KmsKeyF138A6A4",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Kms/KeyAlias/Resource"
   }
  },
  "StorageLogsBucket16160246": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "AccessControl": "LogDeliveryWrite",
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "my-mlops-dev-logs",
    "LifecycleConfiguration": {
     "Rules": [
      {
       "ExpirationInDays": 365,
       "NoncurrentVersionExpiration": {
        "NoncurrentDays": 180
       },
       "Status": "Enabled"
      }
     ]
    },
    "OwnershipControls": {
     "Rules": [
      {
       "ObjectOwnership": "ObjectWriter"
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Storage/LogsBucket/Resource"
   }
  },
  "StorageLogsBucketPolicyF1EDCC63": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "StorageLogsBucket16160246"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "StorageLogsBucket16160246",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageLogsBucket16160246",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": {
        "Fn::GetAtt": [
         "StorageLogsBucket16160246",
         "Arn"
        ]
       },
       "Sid": "HttpsOnlyBucket"
      },
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "StorageLogsBucket16160246",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       },
       "Sid": "HttpsOnlyObjects"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Storage/LogsBucket/Policy/Resource"
   }
  },
  "StorageArtifactsBucketB19151BF": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "KMSMasterKeyID": {
         "Fn::GetAtt": [
          "KmsKeyF138A6A4",
          "Arn"
         ]
        },
        "SSEAlgorithm": "aws:kms"
       }
      }
     ]
    },
    "BucketName": "my-mlops-dev-artifacts",
    "LifecycleConfiguration": {
     "Rules": [
      {
       "ExpirationInDays": 90,
       "NoncurrentVersionExpiration": {
        "NoncurrentDays": 90
       },
       "Status": "Enabled"
      }
     ]
    },
    "LoggingConfiguration": {
     "DestinationBucketName": {
      "Ref": "StorageLogsBucket16160246"
     },
     "LogFilePrefix": "artifacts/"
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Storage/ArtifactsBucket/Resource"
   }
  },
  "StorageArtifactsBucketPolicyAE973BC9": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "StorageArtifactsBucketB19151BF"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "StorageArtifactsBucketB19151BF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageArtifactsBucketB19151BF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": {
        "Fn::GetAtt": [
         "StorageArtifactsBucketB19151BF",
         "Arn"
        ]
       },
       "Sid": "HttpsOnlyBucket"
      },
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "StorageArtifactsBucketB19151BF",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       },
       "Sid": "HttpsOnlyObjects"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Storage/ArtifactsBucket/Policy/Resource"
   }
  },
  "StorageDataBucketB1B922FA": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "KMSMasterKeyID": {
         "Fn::GetAtt": [
          "KmsKeyF138A6A4",
          "Arn"
         ]
        },
        "SSEAlgorithm": "aws:kms"
       }
      }
     ]
    },
    "BucketName": "my-mlops-dev-data",
    "LoggingConfiguration": {
     "DestinationBucketName": {
      "Ref": "StorageLogsBucket16160246"
     },
     "LogFilePrefix": "data/"
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Storage/DataBucket/Resource"
   }
  },
  "StorageDataBucketPolicyC997B69E": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "StorageDataBucketB1B922FA"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "StorageDataBucketB1B922FA",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageDataBucketB1B922FA",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": {
        "Fn::GetAtt": [
         "StorageDataBucketB1B922FA",
         "Arn"
        ]
       },
       "Sid": "HttpsOnlyBucket"
      },
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "StorageDataBucketB1B922FA",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       },
       "Sid": "HttpsOnlyObjects"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Storage/DataBucket/Policy/Resource"
   }
  },
  "EcrRepository5297154A": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "ImageScanningConfiguration": {
     "ScanOnPush": true
    },
    "LifecyclePolicy": {
     "LifecyclePolicyText": "{\"rules\":[{\"rulePriority\":1,\"description\":\"Keep the last 20 untagged images\",\"selection\":{\"tagStatus\":\"untagged\",\"countType\":\"imageCountMoreThan\",\"countNumber\":20},\"action\":{\"type\":\"expire\"}}]}"
    },
    "RepositoryName": "my-mlops-dev",
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/Ecr/Repository/Resource"
   }
  },
  "CodeBuildRole728CBADE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for CodeBuild to build/push images and access S3/KMS",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/CodeBuildRole/Resource"
   }
  },
  "CodeBuildRoleDefaultPolicy829527DE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:PutObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "StorageArtifactsBucketB19151BF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageArtifactsBucketB19151BF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageDataBucketB1B922FA",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageDataBucketB1B922FA",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Encrypt",
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:GenerateDataKey*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "KmsKeyF138A6A4",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "ecr:GetAuthorizationToken",
        "ecr:BatchCheckLayerAvailability",
        "ecr:CompleteLayerUpload",
        "ecr:UploadLayerPart",
        "ecr:InitiateLayerUpload",
        "ecr:PutImage",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer",
        "ecr:DescribeRepositories"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CiCdBuildLogsEA39AA40",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:ap-northeast-2:651706765732:log-group:/aws/codebuild/",
           {
            "Ref": "CiCdBuildAE59F546"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:ap-northeast-2:651706765732:log-group:/aws/codebuild/",
           {
            "Ref": "CiCdBuildAE59F546"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:ap-northeast-2:651706765732:report-group/",
          {
           "Ref": "CiCdBuildAE59F546"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "StorageArtifactsBucketB19151BF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageArtifactsBucketB19151BF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:ReEncrypt*",
        "kms:GenerateDataKey*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "KmsKeyF138A6A4",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:Encrypt",
        "kms:ReEncrypt*",
        "kms:GenerateDataKey*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "KmsKeyF138A6A4",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CodeBuildRoleDefaultPolicy829527DE",
    "Roles": [
     {
      "Ref": "CodeBuildRole728CBADE"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/CodeBuildRole/DefaultPolicy/Resource"
   }
  },
  "CodePipelineRoleB31C27BE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codepipeline.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for CodePipeline to orchestrate stages and access artifact store",
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/CodePipelineRole/Resource"
   }
  },
  "CodePipelineRoleDefaultPolicy2731C56D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:PutObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:Encrypt",
        "kms:GenerateDataKey*",
        "kms:DescribeKey"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "KmsKeyF138A6A4",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "StorageArtifactsBucketB19151BF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageArtifactsBucketB19151BF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:ReEncrypt*",
        "kms:GenerateDataKey*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "KmsKeyF138A6A4",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CiCdPipelineSourceCodeCommitCodePipelineActionRole7AC4B272",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CiCdPipelineBuildCodeBuildCodePipelineActionRole0C33426F",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CodePipelineRoleDefaultPolicy2731C56D",
    "Roles": [
     {
      "Ref": "CodePipelineRoleB31C27BE"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/CodePipelineRole/DefaultPolicy/Resource"
   }
  },
  "CiCdRepo76115433": {
   "Type": "AWS::CodeCommit::Repository",
   "Properties": {
    "RepositoryDescription": "Bootstrap repo for my-mlops",
    "RepositoryName": "my-mlops-repo",
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/CiCd/Repo/Resource"
   }
  },
  "CiCdRepoMymlopsBaseStackCiCdPipeline8AC719AFmainEventRuleD530E4EB": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "source": [
      "aws.codecommit"
     ],
     "resources": [
      {
       "Fn::GetAtt": [
        "CiCdRepo76115433",
        "Arn"
       ]
      }
     ],
     "detail-type": [
      "CodeCommit Repository State Change"
     ],
     "detail": {
      "event": [
       "referenceCreated",
       "referenceUpdated"
      ],
      "referenceName": [
       "main"
      ]
     }
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":codepipeline:ap-northeast-2:651706765732:",
         {
          "Ref": "CiCdPipelineBFCF649F"
         }
        ]
       ]
      },
      "Id": "Target0",
      "RoleArn": {
       "Fn::GetAtt": [
        "CiCdPipelineEventsRole39EDBB34",
        "Arn"
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/CiCd/Repo/MymlopsBaseStackCiCdPipeline8AC719AF-main-EventRule/Resource"
   }
  },
  "CiCdBuildLogsEA39AA40": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30,
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/CiCd/BuildLogs/Resource"
   }
  },
  "CiCdBuildAE59F546": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "NO_ARTIFACTS"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "EncryptionKey": {
     "Fn::GetAtt": [
      "KmsKeyF138A6A4",
      "Arn"
     ]
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/standard:7.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": true,
     "Type": "LINUX_CONTAINER"
    },
    "LogsConfig": {
     "CloudWatchLogs": {
      "GroupName": {
       "Ref": "CiCdBuildLogsEA39AA40"
      },
      "Status": "ENABLED"
     }
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "CodeBuildRole728CBADE",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"runtime-versions\": {\n        \"python\": \"3.11\"\n      },\n      \"commands\": [\n        \"echo INSTALL\",\n        \"aws --version\",\n        \"python --version\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"echo BUILD on `date` in $AWS_DEFAULT_REGION\",\n        \"echo Commit=$CODEBUILD_RESOLVED_SOURCE_VERSION\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"**/*\"\n    ],\n    \"base-directory\": \".\"\n  }\n}",
     "Type": "NO_SOURCE"
    },
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/CiCd/Build/Resource"
   }
  },
  "CiCdPipelineBFCF649F": {
   "Type": "AWS::CodePipeline::Pipeline",
   "Properties": {
    "ArtifactStore": {
     "EncryptionKey": {
      "Id": {
       "Fn::GetAtt": [
        "KmsKeyF138A6A4",
        "Arn"
       ]
      },
      "Type": "KMS"
     },
     "Location": {
      "Ref": "StorageArtifactsBucketB19151BF"
     },
     "Type": "S3"
    },
    "Name": "my-mlops-repo-pipeline",
    "RestartExecutionOnUpdate": true,
    "RoleArn": {
     "Fn::GetAtt": [
      "CodePipelineRoleB31C27BE",
      "Arn"
     ]
    },
    "Stages": [
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Source",
         "Owner": "AWS",
         "Provider": "CodeCommit",
         "Version": "1"
        },
        "Configuration": {
         "RepositoryName": {
          "Fn::GetAtt": [
           "CiCdRepo76115433",
           "Name"
          ]
         },
         "BranchName": "main",
         "PollForSourceChanges": false
        },
        "Name": "CodeCommit",
        "OutputArtifacts": [
         {
          "Name": "Source"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "CiCdPipelineSourceCodeCommitCodePipelineActionRole7AC4B272",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Source"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "CiCdBuildAE59F546"
         }
        },
        "InputArtifacts": [
         {
          "Name": "Source"
         }
        ],
        "Name": "CodeBuild",
        "OutputArtifacts": [
         {
          "Name": "BuildOutput"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "CiCdPipelineBuildCodeBuildCodePipelineActionRole0C33426F",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Build"
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ]
   },
   "DependsOn": [
    "CodePipelineRoleDefaultPolicy2731C56D",
    "CodePipelineRoleB31C27BE"
   ],
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/CiCd/Pipeline/Resource"
   }
  },
  "CiCdPipelineSourceCodeCommitCodePipelineActionRole7AC4B272": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::651706765732:root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/CiCd/Pipeline/Source/CodeCommit/CodePipelineActionRole/Resource"
   }
  },
  "CiCdPipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicy7E3902CD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "StorageArtifactsBucketB19151BF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageArtifactsBucketB19151BF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:ReEncrypt*",
        "kms:GenerateDataKey*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "KmsKeyF138A6A4",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "codecommit:GetBranch",
        "codecommit:GetCommit",
        "codecommit:UploadArchive",
        "codecommit:GetUploadArchiveStatus",
        "codecommit:CancelUploadArchive"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CiCdRepo76115433",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CiCdPipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicy7E3902CD",
    "Roles": [
     {
      "Ref": "CiCdPipelineSourceCodeCommitCodePipelineActionRole7AC4B272"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/CiCd/Pipeline/Source/CodeCommit/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "CiCdPipelineEventsRole39EDBB34": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/CiCd/Pipeline/EventsRole/Resource"
   }
  },
  "CiCdPipelineEventsRoleDefaultPolicy7AE98E11": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codepipeline:StartPipelineExecution",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codepipeline:ap-northeast-2:651706765732:",
          {
           "Ref": "CiCdPipelineBFCF649F"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CiCdPipelineEventsRoleDefaultPolicy7AE98E11",
    "Roles": [
     {
      "Ref": "CiCdPipelineEventsRole39EDBB34"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/CiCd/Pipeline/EventsRole/DefaultPolicy/Resource"
   }
  },
  "CiCdPipelineBuildCodeBuildCodePipelineActionRole0C33426F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::651706765732:root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Env",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Project",
      "Value": "my-mlops"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/CiCd/Pipeline/Build/CodeBuild/CodePipelineActionRole/Resource"
   }
  },
  "CiCdPipelineBuildCodeBuildCodePipelineActionRoleDefaultPolicy6801B28B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild",
        "codebuild:StopBuild"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CiCdBuildAE59F546",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CiCdPipelineBuildCodeBuildCodePipelineActionRoleDefaultPolicy6801B28B",
    "Roles": [
     {
      "Ref": "CiCdPipelineBuildCodeBuildCodePipelineActionRole0C33426F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/CiCd/Pipeline/Build/CodeBuild/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/32R0W4CIRREv8V3pNVNP8Caxpg2LVkbXxsWb/W6LGzgojGEf292WeWtT3NmmEwgLPnipeLPM3n1c3Vo5xobHnckVcvk1f9EUEse971i61+zF2smQqNR7UJjgIasUG0DwbdsNJS8ZCvvrUJJaM2jPMDbVgzyKWkjCa7yxoTDiyQow1tD4Aw8Cvkmk1sRSXXqwFBibed5fIexMchKo/SDGSExX/H4GlSbZyfKIqxGdStx9omBcjzW0FuPZN1YKC4xlB2Ptc1PHrUM3SeUPYCyXYf03xJcwJDnsQ7TWNCQmLZHz+OHPW6cDf2Q3znvNgH1gUfh7BnU+KoJ83GPPWg0wKOYaKxMnBKrwdvg1Bh/BepD/skpTUzc6GTNU8UXS17Nzh5x7oIh7IDXWf8Ac9FET0ACAAA="
   },
   "Metadata": {
    "aws:cdk:path": "My-mlops-BaseStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "CodeCommitCloneUrlHttp": {
   "Value": {
    "Fn::GetAtt": [
     "CiCdRepo76115433",
     "CloneUrlHttp"
    ]
   }
  },
  "PipelineName": {
   "Value": {
    "Ref": "CiCdPipelineBFCF649F"
   }
  },
  "ArtifactsBucket": {
   "Value": {
    "Ref": "StorageArtifactsBucketB19151BF"
   }
  },
  "DateBucket": {
   "Value": {
    "Ref": "StorageDataBucketB1B922FA"
   }
  },
  "LogsBucket": {
   "Value": {
    "Ref": "StorageLogsBucket16160246"
   }
  },
  "EcrRepoUri": {
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Fn::Select": [
        4,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "EcrRepository5297154A",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".dkr.ecr.",
      {
       "Fn::Select": [
        3,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "EcrRepository5297154A",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "EcrRepository5297154A"
      }
     ]
    ]
   }
  },
  "VpcId": {
   "Value": {
    "Ref": "NetVpc9C8E08CA"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}